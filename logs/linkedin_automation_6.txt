 SystemMessage 
You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.

# Input Format
Task
Previous steps
Current URL
Open Tabs
Interactive Elements
[index]<type>text</type>
- index: Numeric identifier for interaction
- type: HTML element type (button, input, etc.)
- text: Element description
Example:
[33]<button>Submit Form</button>

- Only elements with numeric indexes in [] are interactive
- elements without [] provide only context

# Response Rules
1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:
{"current_state": {"evaluation_previous_goal": "Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not",
"memory": "Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz",
"next_goal": "What needs to be done with the next immediate action"},
"action":[{"one_action_name": {// action-specific parameter}}, // ... more actions in sequence]}

2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum {max_actions} actions per sequence.
Common action sequences:
- Form filling: [{"input_text": {"index": 1, "text": "username"}}, {"input_text": {"index": 2, "text": "password"}}, {"click_element": {"index": 3}}]
- Navigation and extraction: [{"go_to_url": {"url": "https://example.com"}}, {"extract_content": {"goal": "extract the names"}}]
- Actions are executed in the given order
- If the page changes after an action, the sequence is interrupted and you get the new state.
- Only provide the action sequence until an action which changes the page state significantly.
- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page
- only use multiple actions if it makes sense.

3. ELEMENT INTERACTION:
- Only use indexes of the interactive elements
- Elements marked with "[]Non-interactive text" are non-interactive

4. NAVIGATION & ERROR HANDLING:
- If no suitable elements exist, use other functions to complete the task
- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.
- Handle popups/cookies by accepting or closing them
- Use scroll to find elements you are looking for
- If you want to research something, open a new tab instead of using the current tab
- If captcha pops up, try to solve it - else try a different approach
- If the page is not fully loaded, use wait action

5. TASK COMPLETION:
- Use the done action as the last action as soon as the ultimate task is complete
- Dont use "done" before you are done with everything the user asked you, except you reach the last step of max_steps. 
- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!
- If you have to do something repeatedly for example the task says for "each", or "for all", or "x times", count always inside "memory" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.
- Don't hallucinate actions
- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. 

6. VISUAL CONTEXT:
- When an image is provided, use it to understand the page layout
- Bounding boxes with labels on their top right corner correspond to element indexes

7. Form filling:
- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.

8. Long tasks:
- Keep track of the status and subresults in the memory. 

9. Extraction:
- If your task is to find information - call extract_content on the specific pages to get and store the information.
Your responses must be always JSON with the specified format.

 HumanMessage 
Your ultimate task is: """
                Note: I'll use the standard LinkedIn interface screenshot at /home/kibe/Dev/Upwork/linkedin-automation/browser-use/static/uploads/linkedin_interface.png as a reference.
                I'll use my knowledge of LinkedIn's interface to navigate and perform the actions you requested.
                

go youtube and watch a video, any video, or search for germany lessons""". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.

 HumanMessage 
Example output:

 AIMessage 


 ToolMessage 
Browser started

 HumanMessage 
[Your task history memory starts here]

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: üîó  Navigated to https://www.youtube.com

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ‚å®Ô∏è  Input german lessons into index 3

 HumanMessage 
Action result: Something new appeared after action 1 / 2

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: üñ±Ô∏è  Clicked button with index 7:

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: üìÑ  Extracted from page
: Here is the extracted video information in JSON format:

{
  "german_lessons": [
    {
      "title": "A1 | Learn German for beginners",
      "duration": "67 lessons",
      "channel": "Learn German"
    },
    {
      "title": "GERMAN FOR BEGINNERS FREE COURSE (A1) LESSONS 1-63",
      "duration": "62 videos", 
      "channel": "Learn German with Anja"
    },
    {
      "title": "Learn German in 25 Minutes - ALL the Basics You Need",
      "duration": "25:59",
      "channel": "Learn German with GermanPod101.com"
    },
    {
      "title": "GERMAN LESSON 1: Learn German for Beginners - German Greetings",
      "duration": "4:32",
      "channel": "Learn German with Anja"
    },
    {
      "title": "The German Alphabet - Learn German (Lesson 1) - Complete A1-B1 Course",
      "duration": "1:37",
      "channel": "LanguageSheep"
    },
    {
      "title": "A1 - Lesson 2 | Common Phrases | German for beginners",
      "duration": "10:40",
      "channel": "Learn German"
    },
    {
      "title": "Learn German A1 in 25 Minutes Step by Step (Crash Course For Beginners)",
      "duration": "25:02",
      "channel": "Max Yoko"
    },
    {
      "title": "A1 - Lesson 5 | Alphabets | das Alphabet | German for beginners",
      "duration": "10:36",
      "channel": "Learn German"
    }
  ]
}

 HumanMessage 
[Task history memory ends]
[Current state starts here]
The following is one-time information - if you need to remember it write it to memory:
Current url: https://www.youtube.com/results?search_query=german+lessons+for+beginners
Available tabs:
[TabInfo(page_id=0, url='https://www.youtube.com/results?search_query=german+lessons+for+beginners', title='german lessons for beginners - YouTube')]
Interactive elements from top layer of the current page inside the viewport:
[Start of page]
[0]<button Guide/>
[1]<a YouTube Home/>
KE
[2]<div />
[3]<input text;combobox;search_query;true;Search/>
[4]<button Clear search query/>
[5]<button Search/>
[6]<button Search with your voice/>
[7]<a />
[8]<button Settings/>
[9]<a Sign in/>
[10]<ytd-mini-guide-entry-renderer Home;tab/>
[11]<a Home>Home
Home/>
[12]<ytd-mini-guide-entry-renderer tab;Shorts/>
[13]<a Shorts>Shorts
Shorts/>
[14]<ytd-mini-guide-entry-renderer tab;Subscriptions/>
[15]<a Subscriptions>Subscriptions
Subscriptions/>
[16]<ytd-mini-guide-entry-renderer You;tab/>
[17]<a You>You
You/>
[18]<ytd-mini-guide-entry-renderer History;tab/>
[19]<a History>History
History/>
[20]<yt-chip-cloud-chip-renderer tab>All
All/>
[21]<yt-chip-cloud-chip-renderer tab>Shorts
Shorts/>
[22]<yt-chip-cloud-chip-renderer tab>Videos
Videos/>
[23]<yt-chip-cloud-chip-renderer tab>Unwatched
Unwatched/>
[24]<yt-chip-cloud-chip-renderer tab>Watched
Watched/>
[25]<yt-chip-cloud-chip-renderer tab>Recently uploaded
Recently uploaded/>
[26]<yt-chip-cloud-chip-renderer tab>Live
Live/>
[27]<yt-chip-cloud-chip-renderer tab>Playlists
Playlists/>
[28]<button ;Search filters>Filters/>
[29]<img />
[30]<a />
[31]<a Career ready with UniSA/>
[32]<a />
[33]<a Start your practical, industry-informed degree./>
Sponsored
UniSA
[34]<button My Ad Center/>
[35]<a 67 lessons/>
[36]<img />
[37]<a A1 | Learn German for beginners/>
[38]<a Learn German/>
‚Ä¢
[39]<a Course/>
[40]<a A1 - Lesson 1 | Begr√º√üungen | Greetings | German for beginners | Learn German ¬∑ 10:04/>
[41]<a A1 - Lesson 2 | Common Phrases | German for beginners | Learn German ¬∑ 10:40/>
[42]<a View full course/>
[43]<a 62 videos/>
[44]<img />
[45]<a GERMAN FOR BEGINNERS FREE COURSE (A1) LESSONS 1-63 üòÉ üòÑ üòÖ üòÜ/>
[46]<a Learn German with Anja/>
‚Ä¢
[47]<a Playlist/>
[48]<a LEARN GERMAN FOR BEGINNERS LESSONS 1-50 for FREE üòÉüòÉüòÉ ¬∑ 1:36/>
[49]<a GERMAN LESSON 1: Learn German for Beginners - German Greetings ü§ó ¬∑ 4:32/>
[50]<a View full playlist/>
[51]<a />
[52]<a Language A1: Learn German For Beginners | Udemy/>
Shop thousands of high-quality on-demand online courses. 30-day satisfaction guarantee. Learn online at your own pace. Start today...
Sponsored
https://www.udemy.com/
[53]<button My Ad Center/>
[54]<a 25:59
25:59
Now playing/>
[55]<img />
[56]<a Learn German in 25 Minutes - ALL the Basics You Need by Learn German with GermanPod101.com 6,684,400 views 7 years ago 25 minutes>Learn German in 25 Minutes - ALL the Basics You Need/>
[57]<button Action menu/>
6.6M views
7 years ago
[58]<a Go to channel/>
[59]<a Learn German with GermanPod101.com/>
In this video, you'll get started with
German
. You will discover the key points of
German
Grammar! This is THE place to start if you¬†...
6
moments
[60]<div button>Introduce Ourselves in German | Laura's Insights | Greetings | Guten Tag | Do You Speak English | How To Form Compound Numbers above 20/>
[61]<button More/>
... 9303 pixels below - scroll or extract content to see more ...
Current step: 5/100Current date and time: 2025-03-29 22:49

 RESPONSE
{
  "current_state": {
    "evaluation_previous_goal": "Success - Found several good German lesson videos to choose from",
    "memory": "Found comprehensive German lessons. Will select 'Learn German in 25 Minutes - ALL the Basics You Need' which is a good starting point with 6.6M views. Step 5/100.",
    "next_goal": "Click on the comprehensive German lesson video to start watching"
  },
  "action": [
    {
      "click_element": {
        "index": 56
      }
    }
  ]
}